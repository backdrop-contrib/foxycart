<?php

// $Id$

/**
 * @file foxycart.module
 *
 * Module to provide integration of Drupal and FoxyCart.
 *
 * Copyright (c) 2012 Jason York
 *
 */

// Before enabling, make sure the devel module is enabled
define("FOXYCART_DEBUG", FALSE);

include_once "foxycart_help.inc.php";
include_once "foxycart_user.inc.php";
include_once "foxycart_datafeedtest.inc.php";


function foxycart_init() {
	if (strlen(foxycart_get_domain())) {

		/* Include the required Javascript and CSS from foxycart.com */
		drupal_add_js('//cdn.foxycart.com/' . foxycart_get_domain() . '/foxycart.colorbox.js', 'external');
		drupal_add_js(drupal_get_path('module', 'foxycart') .'/foxycart.js');

		drupal_add_css(drupal_get_path('module', 'foxycart') .'/foxycart.css');
		drupal_add_css('//cdn.foxycart.com/static/scripts/colorbox/1.3.18/style1_fc/colorbox.css', array('type' => 'external'));
	}
}

function foxycart_test() {
	$testuser = "test@example.com";	
	print "<pre>update:<br/>";
//	print_r(htmlentities(foxycart_api_update_user($testuser, "test123")->asXML() ));
	print "get: <br/><br/>";
	
	print_r(htmlentities(foxycart_api_getuser($testuser)->asXML()));

	//print_r($order);
	print "</pre>";
	exit;
}

function foxycart_menu() {
	$items = array();

	// Admin user pages
	$items['admin/foxycart'] = array(
    'title' => 'FoxyCart',
  	'page callback' => 'drupal_get_form', 
  	'access arguments' => array('access administration pages'),
  	'page arguments' => array('foxycart_admin_settings'),
  	'file' => 'foxycart.module');

	$items['admin/foxycart/settings'] = array(
  	'title' => 'Settings',
  	'description' => 'Configure FoxyCart Drupal Settings',
  	'page callback' => 'drupal_get_form', 
  	'access arguments' => array('access administration pages'),
  	'page arguments' => array('foxycart_admin_settings'),
  	'weight' => '1');

	$items['admin/foxycart/help'] = array(
  	'title' => 'Help',
  	'description' => 'Detailed Instructions on Using Drupal FoxyCart',
  	'access arguments' => array('access administration pages'),
   	'page callback' => 'foxycart_detailed_help', 
  	'weight' => '2');

	$items['foxycart/datafeed'] = array(
	'title' => 'FoxyCart Datafeed',
 	'type' => MENU_CALLBACK,
	'description' => 'Process the FoxyCart datafeed',
	'page callback' => 'foxycart_datafeed', 
	'access callback' => TRUE,
	'weight' => '4');

	$items['foxycart/sso'] = array(
	'title' => 'Foxycart SSO',
 	'type' => MENU_CALLBACK,
	'description' => 'Process Foxycart SSO',
	'page callback' => 'foxycart_process_sso', 
	'access callback' => TRUE);

// 	TODO: Comment out - Used during development to test the datafeed functionality
/*
	$items['foxycart/test'] = array(
		'title' => 'Test',
	 	'type' => MENU_CALLBACK,
		'description' => 'Process Foxycart SSO',
		'page callback' => 'foxycart_test', 
		'access callback' => TRUE);
*/
// 	TODO: Comment out - Used during development to test the datafeed functionality
/*
	$items['admin/foxycart/datafeedtest'] = array(
	 	'title' => 'Datafeed Test',
	 	'description' => 'Test the FoxyCart datafeed',
	 	'access arguments' => array('access administration pages'),
	 	'page callback' => 'foxycart_datafeed_test',
	 	'weight' => '3');
*/	   
	return $items;
}

function foxycart_help($path, $arg) {
	switch ($path) {
		case 'admin/help#foxycart':
			return t('The FoxyCart module integrates the ' . fclink() .' system with Drupal');
		case 'admin/foxycart/settings':
			return t('Configures FoxyCart Drupal Settings');
	}
}

function foxycart_theme($existing, $type, $theme, $path) {
	return array(
	    'foxycart_summary_cart_block' => array(
		  'variables' => array('fc_domain' => foxycart_get_domain()),
	      'template' => 'foxycart-summary-cart-block'
		)
		,'foxycart_full_cart_block' => array(
		  'variables' => array('fc_domain' => foxycart_get_domain(),
	                           'logo'      => ''),
	      'template' => 'foxycart-full-cart-block'
		)
	);
}

function foxycart_get_full_cart_block() {
	global $base_root;

	$foxycart_domain = foxycart_get_domain();
	$path = drupal_get_path('module', 'foxycart');
	if (variable_get('foxycart_show_logo', false))
	{
		$fc_link = fclink(theme('image', array('path' =>  $path . '/powered-by-foxycart-80x15.png', 'alt' => t('Powered by FoxyCart Ecommerce'), 'title' => t('Powered by FoxyCart Ecommerce'), 'attributes' => array('id' => 'fc_full_cart_logo'))));
	}
	else
	{
		$fc_link = "";
	}

	return theme('foxycart_full_cart_block', array('fc_domain' => foxycart_get_domain(), 'logo' => $fc_link));
}

function foxycart_get_domain() {
	return variable_get('foxycart_subdomain', '');
}

function foxycart_get_apikey() {
	$key = variable_get('foxycart_apikey', '');
	if ($key == '') {
		$key = "fx5pl9".hash_hmac('sha256',rand(1000,65535),"soi42".time());
		variable_set('foxycart_apikey', $key);
		$test = variable_get('foxycart_apikey', '');
	}
	return $key; 
}

/**
 * Implements hook_block_info().
 */
function foxycart_block_info() {
	$blocks = array();
	$blocks[0]['info'] = 'FoxyCart: Cart Summary';
	$blocks[1]['info'] = 'FoxyCart: Full Cart';

	return $blocks;
}

/**
 * Implements hook_block_view().
 */
function foxycart_block_view($delta = 0) {
	$block = array();
	switch ($delta) {
		case 0:
			// FoxyCart: Cart Summary
			$block['subject'] = ''; // Title is displayed in the content so it can be hidden
			$block['content'] = theme('foxycart_summary_cart_block', array('fc_domain' => foxycart_get_domain()));
			break;
		case 1:
			// FoxyCart: Full Cart
			$block['subject'] = '';
			$block['content'] = foxycart_get_full_cart_block();
			break;
	}

	return $block;

}

/* Process the datafeed supplied by FoxyCart.com after an order is processed */
function foxycart_datafeed() {

	foxycart_log("datafeed: Starting");
	if (isset($_POST['FoxyData'])) {
		foxycart_log("datafeed: Got FoxyData");
		try {
			$XMLOutput_decrypted = urldecode($_POST["FoxyData"]);
			$XMLOutput_decrypted = foxycart_decrypt_rc4(foxycart_get_apikey(),$XMLOutput_decrypted);
			$data = simplexml_load_string($XMLOutput_decrypted, 'SimpleXMLElement', LIBXML_NOCDATA);
			foxycart_log(print_r($data, true));
			if (is_object($data)) {
				foxycart_log("datafeed: Got data");

				foreach ($data->transactions[0] as $transaction) {
					foxycart_log("datafeed: Processing transaction");
						
					watchdog('foxycart', 'Recevied datafeed for transaction id <a href="https://admin.foxycart.com/admin.php?ThisAction=TransactionHistory&trans_id=%tid">%tid</a>, customer id %cid, %fn %ln. Order total: %total.',
					array('%tid' => "$transaction->id", '%cid' => "$transaction->customer_id", '%fn' => "$transaction->customer_first_name",
							 '%ln' => "$transaction->customer_last_name", '%total' => "$transaction->order_total"), WATCHDOG_INFO);
					
					if (variable_get('foxycart_user_sync', true) == true
					&& (int)$transaction->is_anonymous == 0) {
						$user = foxycart_update_drupal_user($transaction->customer_id, $transaction->customer_email, $transaction->customer_password, $user_id = NULL);
						if ($user == FALSE) {
							throw new Exception('Error matching FoxyCart user to Drupal user when processing datafeed.');
						}
					}					
					
					if (module_exists('foxycart_uc')) {
						foxycart_log("datafeed: creating UC order");
						foxycart_uc_df_create_order($transaction);
					}
				}
				print "foxy"; /* Success */
			}
		} catch (Exception $e) {
			watchdog('foxycart', 'Error processing datafeed from FoxyCart: %err', array('%err' => $e->getMessage()), WATCHDOG_ERROR);
			foxycart_log("datafeed: Error processing datafeed from FoxyCart: ". $e->getMessage());
		}
	}
	exit;
}


function fclink($text = 'FoxyCart') {
	return '<a href="http://affiliate.foxycart.com/idevaffiliate.php?id=165">' . $text .'</a>';
}

function foxycart_permission() {
	return array(
	    'access administration pages' => array(
	      'title' => t('Access Administration Pages'), 
	      'description' => t('Perform administration tasks for FoxyCart.'),
	)
	);
}

function foxycart_admin_settings() {
	global $base_root;
	$path = drupal_get_path('module', 'foxycart');

	$form['access'] = array(
	'#type' => 'fieldset',
  	'#title' => t('FoxyCart settings'),
   	'#description' => "<p>" . t("Here you can configure all of your !fclink integration settings.\n  If you do not yet have a FoxyCart account, !signup.  It's easy and free to try.", array('!fclink' => fclink('FoxyCart'), '!signup' => fclink(t('Click Here to Sign up')))) . ".</p>");

	$form['access']['foxycart_subdomain'] = array(
  	'#type' => 'textfield',
  	'#title' => t("Your FoxyCart Subdomain"),
  	'#default_value' => foxycart_get_domain(),
  	'#size' => 70,
  	'#description' => t("Your custom subdomain at foxycart.com. For example: if you setup mystore as your domain enter 'mystore' in the box above.  Your cart page would be located at mystore.foxycart.com/cart.php."),
  	'#maxlength' => 255,
  	'#required' => TRUE);

	$form['access']['foxycart_apikey'] = array(
  	'#type' => 'textfield',
  	'#title' => t("Your FoxyCart API Key"),
  	'#default_value' => foxycart_get_apikey(),
  	'#size' => 70,
  	'#description' => t('Your store API key.  Copy and paste this to the advanced <a href="https://admin.foxycart.com/admin.php?ThisAction=EditAdvancedFeatures">admin section of your foxycart account</a>.'),
  	'#maxlength' => 70,
  	'#disabled' => TRUE,
	'#attributes' => array(
		'readonly' => 'readonly')
	);

	$form['access']['foxycart_reset_apikey'] = array(
	  	'#type' => 'checkbox',
	  	'#title' => t("Reset (Generate a new) API Key"),
	  	'#default_value' => false,
	  	'#description' => t('Creates a new API Key.  After saving this option, update the FoxyCart Admin with the new key'),
	  	'#required' => FALSE);	
	
	
	$form['auth'] = array(
  	'#type' => 'fieldset',
  	'#title' => t('Authentication settings'));

	$form['auth']['foxycart_user_sync'] = array(
  	'#type' => 'checkbox',
  	'#title' => t("Synchronize Drupal and FoxyCart User Accounts"),
  	'#default_value' => variable_get('foxycart_user_sync', true),
    '#description' => t('This should be enabled if using FoxyCart\'s single sign on (SSO) feature. (Highly recommended)'),
  	'#required' => FALSE);

	$form['display'] = array(
  	'#type' => 'fieldset',
  	'#title' => t('Display'));

	$form['display']['foxycart_show_logo'] = array(
  	'#type' => 'checkbox',
  	'#title' => t("Show FoxyCart Logo"),
  	'#default_value' => variable_get('foxycart_show_logo', false),
  	'#description' => t('Display the "Powered By FoxyCart" logo'),
  	'#required' => FALSE);	
	
	// Submit button
	$form['submit'] = array(
	  '#type' => 'submit',
	  '#value' => t('Save settings'),
	);
	//return system_settings_form($form);
	return $form;
}

function foxycart_admin_settings_submit($form, &$form_state) {
	variable_set('foxycart_subdomain', $form_state['values']['foxycart_subdomain']);
	
	if ($form_state['values']['foxycart_reset_apikey'] == 1) {
		variable_del('foxycart_apikey');
		foxycart_get_apikey();
	}
	variable_set('foxycart_user_sync', $form_state['values']['foxycart_user_sync']);
	variable_set('foxycart_show_logo', $form_state['values']['foxycart_show_logo']);
	
	drupal_set_message(t('The settings have been saved'));
}


function foxycart_decrypt_rc4($inkey, $data)
{
	$result = "";
	
	$S = array();
	$key = array();

	$kl = strlen($inkey);
	for ($i = 0; $i < 256; $i++) {
		$key[$i] = ord($inkey[$i % $kl]);
		$S[$i] = $i;
	}

	for ($i = $j = 0; $i < 256; $i++) {
		$j = ($j + $key[$i] + $S[$i]) % 256;
		$tmp = $S[$i];
		$S[$i] = $S[$j];
		$S[$j] = $tmp;
	}

	$dl = strlen($data);
	for ($a = $i = $j = 0; $i < $dl; $i++) {
		$a = ($a + 1) % 256;
		$j = ($j + $S[$a]) % 256;
		$tmp = $S[$a];
		$S[$a] = $S[$j];
		$S[$j] = $tmp;
		$k = $S[(($S[$a] + $S[$j]) % 256)];
		$result .= chr(ord($data[$i]) ^ $k);
	}

	return $result;
}


function foxycart_get_product_attribute($product_code, $option_name, $option_value = '', $method = 'name') {
	if (!$product_code || !$option_name) {
		return FALSE;
	}
	if ($option_value == '--OPEN--') {
		$hash = hash_hmac('sha256', $product_code.$option_name.$option_value, foxycart_get_apikey());
		$value = $option_name.'||'.$hash.'||open';
	} else {
		$hash = hash_hmac('sha256', $product_code.$option_name.$option_value, foxycart_get_apikey());
		if ($method == 'name') {
			$value = $option_name.'||'.$hash;
		} else {
			$value = $option_value.'||'.$hash;
		}
	}

	return $value;
}

/** Prettifies an XML string into a human-readable and indented work of art
*  @param string $xml The XML as a string
*  @param boolean $html_output True if the output should be escaped (for use in HTML)
*/
function foxycart_xmlpp($xml, $html_output=false) {
	$xml_obj = new SimpleXMLElement($xml);
	$level = 4;
	$indent = 0; // current indentation level
	$pretty = array();

	// get an array containing each XML element
	$xml = explode("\n", preg_replace('/>\s*</', ">\n<", $xml_obj->asXML()));

	// shift off opening XML tag if present
	if (count($xml) && preg_match('/^<\?\s*xml/', $xml[0])) {
		$pretty[] = array_shift($xml);
	}

	foreach ($xml as $el) {
		if (preg_match('/^<([\w])+[^>\/]*>$/U', $el)) {
			// opening tag, increase indent
			$pretty[] = str_repeat(' ', $indent) . $el;
			$indent += $level;
		} else {
			if (preg_match('/^<\/.+>$/', $el)) {
				$indent -= $level;  // closing tag, decrease indent
			}
			if ($indent < 0) {
				$indent += $level;
			}
			$pretty[] = str_repeat(' ', $indent) . $el;
		}
	}
	$xml = implode("\n", $pretty);
	return ($html_output) ? htmlentities($xml) : $xml;
}

function foxycart_log($data, $label = NULL) {
	if (FOXYCART_DEBUG) {
		// devel module must be enabled
		dd(date("Y-m-d H:i:s") . ' ' . $data, $label);
	}
}

?>